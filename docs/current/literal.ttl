@prefix : <http://www.essepuntato.it/2010/06/literalreification#> .
@prefix cpannotationschema: <http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix litre: <http://www.essepuntato.it/2010/06/literalreification/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix owlapi: <http://www.semanticweb.org/owlapi#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix region: <http://www.ontologydesignpatterns.org/cp/owl/region.owl#> .
@prefix swrl: <http://www.w3.org/2003/11/swrl#> .
@prefix swrlb: <http://www.w3.org/2003/11/swrlb#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

dc:contributor a owl:AnnotationProperty .

dc:creator a owl:AnnotationProperty .

dc:date a owl:AnnotationProperty .

dc:description a owl:AnnotationProperty .

dc:title a owl:AnnotationProperty .

<http://purl.org/spar/literal> a owl:Ontology ;
    dc:creator "Aldo Gangemi"^^xsd:string,
        "Fabio Vitali"^^xsd:string,
        "Silvio Peroni"^^xsd:string ;
    dc:date "2011-03-23" ;
    dc:description <http://dwellonit.svn.sourceforge.net/svnroot/dwellonit/LiteralReification/literalreification_new.png>,
        """Recently within the Semantic Web community a new topic has been actively discussed: whether and how to allow literals to be subjects of RDF statements (http://www.w3.org/2001/sw/wiki/Literals as Subjects). This discussions failed to provide a unique and clear indication of how to proceed in that regard.

Although one of the suggestions coming out of the discussion was to explicitly include the proposal in a (future) specification of RDF, this topic is not actually new, particularly in ontology modelling. The needs to describe “typical” literals (specially strings) as individuals of a particular class has been addressed by a lot of models in past, such as Common Tag (through the class Tag), SIOC (through the classes Category and Tag), SKOS-XL (through the class Label), and LMM (through the class Expression). 

After considering the above-mentioned models and other related and inspiring ones, we have developed a pattern called literal reification to address this issue. It allows to express literal values as proper ontological individuals so as to use them as subject/object of any assertion within OWL models."""@en ;
    dc:title "Literal Reification pattern" ;
    cpannotationschema:coversRequirements """What is the context in which entities refer to a particular literal value?
What is the meaning of a particular value considering the context in which it is used?"""@en ;
    cpannotationschema:hasComponent "http://www.ontologydesignpatterns.org/cp/owl/region.owl"^^xsd:anyURI ;
    cpannotationschema:hasIntent "This pattern promotes any literal as “first class object” in OWL by reifying it as a proper individual of the class litre:Literal."@en ;
    cpannotationschema:hasUnitTest """SELECT DISTINCT ?entity ?property
WHERE {
	?literal a litre:Literal .
	{ ?literal ?property ?entity } UNION { ?entity ?property ?literal }
}"""@en ;
    cpannotationschema:isSpecializationOf "http://www.ontologydesignpatterns.org/cp/owl/region.owl"^^xsd:anyURI ;
    cpannotationschema:relatedCPs "http://www.ontologydesignpatterns.org/cp/owl/region.owl"^^xsd:anyURI ;
    cpannotationschema:scenarios """Modelling domains concerning descriptive tags, in which each tag may have more than one meaning depending on the context in which it is used.
Extending quickly the capabilities of a model by adding the possibility to make assertions on values, previously referred through data properties, without modifying it."""@en ;
    rdfs:comment "The pattern literal reification is a modelling technique to address scenarios in which we need to bless particular literals, usually when applying data properties, in order to use them as subjects and/or full-fledged objects of semantic assertions."@en ;
    owl:imports <http://www.ontologydesignpatterns.org/cp/owl/region.owl>,
        <http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl> .

litre:hasLiteral a owl:ObjectProperty ;
    rdfs:label "has literal"@en ;
    rdfs:comment "It connects individuals of any class to a reified literal."@en ;
    rdfs:range litre:Literal ;
    rdfs:subPropertyOf region:hasRegion ;
    owl:inverseOf litre:isLiteralOf .

cpannotationschema:coversRequirements a owl:AnnotationProperty .

cpannotationschema:hasComponent a owl:AnnotationProperty .

cpannotationschema:hasIntent a owl:AnnotationProperty .

cpannotationschema:hasUnitTest a owl:AnnotationProperty .

cpannotationschema:isSpecializationOf a owl:AnnotationProperty .

cpannotationschema:relatedCPs a owl:AnnotationProperty .

cpannotationschema:scenarios a owl:AnnotationProperty .

owlapi:nodeID a owl:AnnotationProperty .

rdfs:comment a owl:AnnotationProperty .

rdfs:label a owl:AnnotationProperty .

litre:hasSameLiteralValueAs a owl:ObjectProperty,
        owl:SymmetricProperty,
        owl:TransitiveProperty ;
    rdfs:label "has same literal value as"@en ;
    rdfs:comment "It relates the reified literal to another one that has the same literal value."@en ;
    rdfs:domain litre:Literal ;
    rdfs:range litre:Literal ;
    rdfs:subPropertyOf owl:topObjectProperty .

litre:isLiteralOf a owl:ObjectProperty ;
    rdfs:label "is literal of"@en ;
    rdfs:comment "It connects the reified literal to the individuals that are using it."@en ;
    rdfs:domain litre:Literal ;
    rdfs:subPropertyOf region:isRegionFor .

region:Region a owl:Class .

region:hasRegion a owl:ObjectProperty .

region:hasRegionDataValue a owl:DatatypeProperty .

region:isRegionFor a owl:ObjectProperty .

owl:topObjectProperty a owl:ObjectProperty .

<urn:swrl#v> a swrl:Variable .

<urn:swrl#x> a swrl:Variable .

<urn:swrl#y> a swrl:Variable .

litre:hasLiteralValue a owl:DatatypeProperty,
        owl:FunctionalProperty ;
    rdfs:label "has literal value"@en ;
    rdfs:comment "It is used to specify the literal value that an individual of litre:Literal represents."@en ;
    rdfs:domain litre:Literal ;
    rdfs:range rdfs:Literal ;
    rdfs:subPropertyOf region:hasRegionDataValue .

litre:Literal a owl:Class ;
    rdfs:label "literal"@en ;
    rdfs:comment "It describes reified literals, where the literal value they represent is speficied through the property litre:hasLiteralValue. Each individual of this class must always have a specified value."@en ;
    rdfs:subClassOf region:Region ;
    owl:equivalentClass [ a owl:Restriction ;
            owl:cardinality "1"^^xsd:nonNegativeInteger ;
            owl:onProperty litre:hasLiteralValue ] .

[] a swrl:Imp ;
    swrl:body [ a swrl:AtomList ;
            rdf:first [ a swrl:IndividualPropertyAtom ;
                    swrl:argument1 <urn:swrl#x> ;
                    swrl:argument2 <urn:swrl#y> ;
                    swrl:propertyPredicate litre:hasSameLiteralValueAs ] ;
            rdf:rest [ a swrl:AtomList ;
                    rdf:first [ a swrl:DatavaluedPropertyAtom ;
                            swrl:argument1 <urn:swrl#y> ;
                            swrl:argument2 <urn:swrl#v> ;
                            swrl:propertyPredicate litre:hasLiteralValue ] ;
                    rdf:rest () ] ] ;
    swrl:head [ a swrl:AtomList ;
            rdf:first [ a swrl:DatavaluedPropertyAtom ;
                    swrl:argument1 <urn:swrl#x> ;
                    swrl:argument2 <urn:swrl#v> ;
                    swrl:propertyPredicate litre:hasLiteralValue ] ;
            rdf:rest () ] .

